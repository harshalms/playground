# -*- coding: utf-8 -*-
"""jpg_2_mat.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sEjlC9qJu_ALBS5vN7kZvTJuj0-Kvve1
"""

# from google.colab import drive
# drive.mount('/content/drive')

# cd /content/drive/My Drive/



import os
import numpy as np
import matplotlib.pyplot as plt 
import cv2
import scipy.io as sio
from scipy.io import loadmat
mask_list = os.listdir('/home/user/IoTian/merge_masks')
len(mask_list)

type(mask_list[0])
mask_list[0]

# !pwd

def read_mask(img_path) #, input_sz=(224, 224)):
    """
    Read image file and return cropped, resized, intensity-normalized array
        Arguments
            :img_path: str
            :crop_specs: list
            :input_sz: tuple
        Output
            :rgb_norm: numpy array
    """
    bgr = cv2.imread(img_path)
    rgb = bgr[:,:,::-1]
    # if len(crop_specs) == 4:
    #     rgb = rgb[ crop_specs[0]:crop_specs[1], crop_specs[2]:crop_specs[3], :]
    # rgb = cv2.resize(rgb, (600, 800))
    # rgb = cv2.resize(rgb, input_sz)
    rgb_norm = rgb.astype(np.float32)/ 255.
    
    return rgb_norm

try: 

    # creating a folder named data 
    if not os.path.exists('/home/user/IoTian/mat_mask'): 
        os.makedirs('/home/user/IoTian/mat_mask') 

# if not created then raise error 
except OSError: 
    print ('Error: Creating directory of mat_mask')

i = 0
for name in mask_list:
  path = '/home/user/IoTian/merge_masks/' + name
  mask = read_mask(path)
#   mask = mask[:,:,0]>0.5
  id = name.split('.')
  sio.savemat('/home/user/IoTian/final_mat_mask/'+str(id[0])+'_mask'+'.mat', {'mask':mask})
  i+=1
  if i%50==0:
    print(i, 'Files downloaded...')
print('Total {} files downloaded successfully'.format(i))

